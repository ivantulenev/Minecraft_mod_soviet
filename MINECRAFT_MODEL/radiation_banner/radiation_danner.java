Stream.of(
Block.box(13.4, -1.3877787807814457e-16, 7.6, 14.4, 1.2000000000000002, 8.4),
Block.box(13.000000000000002, 1.2000000000000002, 7.6, 14.000000000000002, 2.4000000000000004, 8.4),
Block.box(12.500000000000004, 2.4000000000000012, 7.6, 13.500000000000004, 3.6000000000000014, 8.4),
Block.box(11.900000000000006, 3.6000000000000014, 7.6, 12.900000000000006, 4.799999999999999, 8.4),
Block.box(11.500000000000007, 4.800000000000001, 7.6, 12.500000000000007, 5.9999999999999964, 8.4),
Block.box(11.000000000000009, 5.999999999999998, 7.6, 12.000000000000009, 7.199999999999994, 8.4),
Block.box(10.400000000000011, 7.199999999999996, 7.6, 11.400000000000011, 8.399999999999991, 8.4),
Block.box(9.900000000000013, 8.399999999999991, 7.6, 10.900000000000013, 9.599999999999987, 8.4),
Block.box(9.500000000000014, 9.599999999999987, 7.6, 10.500000000000014, 10.799999999999983, 8.4),
Block.box(9.000000000000016, 10.799999999999983, 7.6, 10.000000000000016, 11.999999999999979, 8.4),
Block.box(8.500000000000018, 11.999999999999979, 7.6, 9.500000000000018, 13.199999999999974, 8.4),
Block.box(7.90000000000002, 13.199999999999974, 7.6, 8.90000000000002, 14.39999999999997, 8.4),
Block.box(2.90000000000002, 13.599999999999975, 7.6, 5.5000000000000195, 14.39999999999997, 8.4),
Block.box(7.500000000000021, 14.39999999999997, 7.6, 8.500000000000021, 15.599999999999966, 8.4),
Block.box(2.7000000000000206, 14.39999999999997, 7.6, 8.500000000000021, 15.599999999999966, 8.4),
Block.box(2.7000000000000215, 15.599999999999966, 7.6, 8.800000000000022, 16.799999999999976, 8.4),
Block.box(2.7000000000000215, 16.599999999999966, 7.6, 10.900000000000023, 17.799999999999976, 8.4),
Block.box(2.7000000000000215, 17.799999999999983, 7.6, 10.900000000000023, 18.999999999999993, 8.4),
Block.box(2.7000000000000215, 19, 7.6, 10.200000000000024, 20.20000000000001, 8.4),
Block.box(2.7000000000000215, 20.200000000000017, 7.6, 9.000000000000025, 21.400000000000027, 8.4),
Block.box(2.7000000000000215, 21.400000000000034, 7.6, 7.800000000000025, 22.600000000000044, 8.4),
Block.box(2.7000000000000215, 22.600000000000048, 7.6, 6.000000000000025, 22.700000000000056, 8.4),
Block.box(5.900000000000022, 22.60000000000005, 7.6, 6.700000000000024, 23.80000000000006, 8.4),
Block.box(6.700000000000021, 22.60000000000005, 7.6, 7.500000000000023, 23.100000000000062, 8.4),
Block.box(7.800000000000017, 21.400000000000034, 7.6, 8.60000000000002, 21.900000000000045, 8.4),
Block.box(9.000000000000012, 20.20000000000002, 7.6, 9.800000000000015, 20.70000000000003, 8.4),
Block.box(10.200000000000008, 19.000000000000004, 7.6, 11.00000000000001, 19.500000000000014, 8.4),
Block.box(10.900000000000006, 18.399999999999995, 7.6, 11.500000000000009, 18.900000000000006, 8.4),
Block.box(8.800000000000008, 15.999999999999995, 7.6, 9.700000000000012, 16.600000000000016, 8.4),
Block.box(10.900000000000006, 16.899999999999977, 7.6, 11.700000000000008, 18.399999999999988, 8.4),
Block.box(5.500000000000024, 23.30000000000006, 7.6, 5.900000000000026, 23.70000000000007, 8.4),
Block.box(6.700000000000021, 23.10000000000006, 7.6, 7.100000000000023, 23.500000000000068, 8.4),
Block.box(7.800000000000017, 21.90000000000004, 7.6, 8.200000000000019, 22.30000000000005, 8.4),
Block.box(9.000000000000012, 20.700000000000024, 7.6, 9.400000000000015, 21.100000000000033, 8.4),
Block.box(10.200000000000008, 19.500000000000007, 7.6, 10.60000000000001, 19.900000000000016, 8.4),
Block.box(10.900000000000006, 18.9, 7.6, 11.300000000000008, 19.300000000000008, 8.4),
Block.box(9.70000000000001, 16.2, 7.6, 10.100000000000012, 16.600000000000012, 8.4),
Block.box(11.700000000000003, 16.99999999999997, 7.6, 12.100000000000005, 17.999999999999982, 8.4),
Block.box(4.200000000000024, 22.60000000000005, 7.6, 5.900000000000027, 23.30000000000006, 8.4)
).reduce((v1, v2) -> VoxelShapes.join(v1, v2, IBooleanFunction.OR)).get();